{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "databricks-projects-kd"
		},
		"ls_formula1dlkd_storage_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_formula1dlkd_storage'"
		},
		"ls_databricks_project_ws_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "0826-224515-e1xzjles"
		},
		"ls_formula1dlkd_storage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://formular1dlkd.dfs.core.windows.net/"
		},
		"tr_process_formular1_data_properties_pipeline_parameters_p_window_end_date": {
			"type": "string",
			"defaultValue": "@trigger().outputs.windowEndTime"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ls_databricks_project_ws')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-1586065262918102.2.azuredatabricks.net",
					"authentication": "MSI",
					"workspaceResourceId": "/subscriptions/43a049ab-e8dd-4186-9c41-293612e2b282/resourceGroups/databricks-projects-kd/providers/Microsoft.Databricks/workspaces/databricks-wp-kd",
					"existingClusterId": "[parameters('ls_databricks_project_ws_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_formula1dlkd_storage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_formula1dlkd_storage_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_formula1dlkd_storage_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_transfromation_formular1_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "race_results",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/databricks-projects/formular1/trans/1.race_results",
							"baseParameters": {
								"p_window_end_date": {
									"value": "@formatDateTime(pipeline().parameters.p_window_end_date, 'yyyy-MM-dd')",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_databricks_project_ws",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "drivers_standing",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "race_results",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/databricks-projects/formular1/trans/2.driver_standing",
							"baseParameters": {
								"p_window_end_date": {
									"value": "@formatDateTime(pipeline().parameters.p_window_end_date, 'yyyy-MM-dd')",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_databricks_project_ws",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "constructors_standing",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "race_results",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/databricks-projects/formular1/trans/3. constructors_standing",
							"baseParameters": {
								"p_window_end_date": {
									"value": "@formatDateTime(pipeline().parameters.p_window_end_date, 'yyyy-MM-dd')",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_databricks_project_ws",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "calculated results",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/databricks-projects/formular1/trans/4. calculated_race_results",
							"baseParameters": {
								"p_window_end_date": {
									"value": "@formatDateTime(pipeline().parameters.p_window_end_date, 'yyyy-MM-dd')",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_databricks_project_ws",
							"type": "LinkedServiceReference"
						}
					}
				],
				"concurrency": 1,
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"p_window_end_date": {
						"type": "string",
						"defaultValue": "2021-03-21"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-09-01T07:44:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_databricks_project_ws')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_formula1dlkd_storage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_window_end_date": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@formatDateTime(dataset().p_window_end_date,'yyyy-MM-dd')",
							"type": "Expression"
						},
						"fileSystem": "raw"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"constructorId": {
							"type": "integer"
						},
						"constructorRef": {
							"type": "string"
						},
						"name": {
							"type": "string"
						},
						"nationality": {
							"type": "string"
						},
						"url": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_formula1dlkd_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ingest_formular1_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Json1",
								"type": "DatasetReference",
								"parameters": {
									"p_window_end_date": {
										"value": "@pipeline().parameters.p_window_end_date",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "If File Exists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('Get Metadata1').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Ingest Circuit Files",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/databricks-projects/formular1/ingestion/1.ingest_circuits_file",
										"baseParameters": {
											"p_file_date": {
												"value": "@formatDateTime(pipeline().parameters.p_window_end_date,'yyyy-MM-dd')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "ls_databricks_project_ws",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Ingest Races Files",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/databricks-projects/formular1/ingestion/2. ingest_races_file",
										"baseParameters": {
											"p_file_date": {
												"value": "@formatDateTime(pipeline().parameters.p_window_end_date,'yyyy-MM-dd')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "ls_databricks_project_ws",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Ingest Drivers Files",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/databricks-projects/formular1/ingestion/4. ingest_drivers_file",
										"baseParameters": {
											"p_file_date": {
												"value": "@formatDateTime(pipeline().parameters.p_window_end_date,'yyyy-MM-dd')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "ls_databricks_project_ws",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Ingest Constructors Files",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/databricks-projects/formular1/ingestion/3.  ingest_constructors_file",
										"baseParameters": {
											"p_file_date": {
												"value": "@formatDateTime(pipeline().parameters.p_window_end_date,'yyyy-MM-dd')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "ls_databricks_project_ws",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Ingest Results Files",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/databricks-projects/formular1/ingestion/5.  ingest_results_file",
										"baseParameters": {
											"p_file_date": {
												"value": "@formatDateTime(pipeline().parameters.p_window_end_date,'yyyy-MM-dd')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "ls_databricks_project_ws",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Ingest Pit_stops Files",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/databricks-projects/formular1/ingestion/6. ingest_pit_stops_file",
										"baseParameters": {
											"p_file_date": {
												"value": "@formatDateTime(pipeline().parameters.p_window_end_date,'yyyy-MM-dd')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "ls_databricks_project_ws",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Ingest Lap times Files",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/databricks-projects/formular1/ingestion/7. Ingest_lap_times_file",
										"baseParameters": {
											"p_file_date": {
												"value": "@formatDateTime(pipeline().parameters.p_window_end_date,'yyyy-MM-dd')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "ls_databricks_project_ws",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Ingest Qualifying Files",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/databricks-projects/formular1/ingestion/8. Ingest_qualifying_file",
										"baseParameters": {
											"p_file_date": {
												"value": "@formatDateTime(pipeline().parameters.p_window_end_date,'yyyy-MM-dd')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "ls_databricks_project_ws",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"concurrency": 1,
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"p_window_end_date": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-09-01T06:19:54Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Json1')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_databricks_project_ws')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_process_formula1_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Ingestion pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_ingest_formular1_data",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"p_window_end_date": {
									"value": "@formatDateTime(pipeline().parameters.p_window_end_date, 'yyyy-MM-dd')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Execute transformation pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Ingestion pipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_transfromation_formular1_data",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"p_window_end_date": {
									"value": "@formatDateTime(pipeline().parameters.p_window_end_date)",
									"type": "Expression"
								}
							}
						}
					}
				],
				"concurrency": 1,
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"p_window_end_date": {
						"type": "string",
						"defaultValue": "2021-03-21"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-09-01T07:44:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_ingest_formular1_data')]",
				"[concat(variables('factoryId'), '/pipelines/pl_transfromation_formular1_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_process_formular1_data')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "pl_process_formula1_data",
						"type": "PipelineReference"
					},
					"parameters": {
						"p_window_end_date": "[parameters('tr_process_formular1_data_properties_pipeline_parameters_p_window_end_date')]"
					}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 168,
					"startTime": "2021-03-14T22:00:00Z",
					"endTime": "2021-04-25T22:00:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 1,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_process_formula1_data')]"
			]
		}
	]
}